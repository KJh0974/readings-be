buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'https://repository.mulesoft.org/snapshots/' }
        maven { url 'https://repository.mulesoft.org/releases/' }
        maven { url 'https://plugins.gradle.org/m2' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2')
        classpath("org.raml.jaxrs:raml-to-jaxrs-gradle-plugin:3.0.2")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'ramltojaxrs'

group = 'lv.proto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven { url 'https://repository.mulesoft.org/snapshots/' }
    maven { url 'https://repository.mulesoft.org/releases/' }
    mavenCentral()
}

sourceSets.main.java.srcDir "$buildDir/generated"

dependencies {
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.modelmapper:modelmapper:2.1.0')
    runtime('org.postgresql:postgresql')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
}

docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

ramltojaxrs {
    sourceDirectory = file('src/main/resources')
    outputDirectory = new File(buildDir,'generated')
    supportPackageName = 'lv.proto.readingsbe.gen'
    resourcePackageName = 'lv.proto.readingsbe.res'
    modelPackageName = 'lv.proto.readingsbe.model'
    generateTypesWith = ['jackson']
}